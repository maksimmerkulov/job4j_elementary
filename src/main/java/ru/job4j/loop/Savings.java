package ru.job4j.loop;

/**
 * Класс {@code Savings} предназначен для вычисления количества лет, необходимых
 * для накопления целевой суммы с учетом ежегодных депозитов и процентной ставки.
 *
 * <p>Этот класс использует метод для расчета времени, необходимого для
 * накопления указанной суммы на счете, принимая во внимание процент,
 * начисляемый ежегодно, и депозиты, которые вносятся каждый год.</p>
 *
 * <p><b>Пример использования:</b></p>
 * <pre>{@code
 * int result = Savings.years(1000, 100, 10);
 * System.out.println(result);
 * }</pre>
 *
 * <p><b>Пример вывода:</b></p>
 * <pre>{@code
 * 8
 * }</pre>
 *
 * @author Maksim Merkulov
 * @version 1.2
 */
public class Savings {

    /**
     * Рассчитывает количество лет, которые потребуются для накопления заданной
     * суммы при условии ежегодного депозита и начисления процентов.
     *
     * <p>Алгоритм работы метода следующий:
     * <ul>
     *     <li>Каждый год добавляется ежегодное пополнение вклада.</li>
     *     <li>Затем начисляются проценты от общей суммы (включая депозит).</li>
     *     <li>Этот процесс продолжается до тех пор, пока накопленная сумма
     *         не станет больше или равной целевой.</li>
     * </ul>
     * </p>
     *
     * @param goal целевая сумма, которую необходимо накопить
     * @param annualDeposit ежегодное пополнение вклада
     * @param percent процентная ставка по вкладу (ежегодная)
     * @return количество лет, необходимых для накопления целевой суммы
     */
    public static int years(double goal, double annualDeposit, double percent) {
        int years = 0;
        double total = 0;
        do {
            total += total * (percent / 100);
            total += annualDeposit;
            years++;
        } while (total < goal);
        return years;
    }
}
